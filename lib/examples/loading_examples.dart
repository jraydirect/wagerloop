// Example usage of Dice Loading Animations in WagerLoop1\n// This file demonstrates all the different ways to use the dice loading animations\n\nimport 'package:flutter/material.dart';\nimport '../widgets/dice_loading_widget.dart';\nimport '../utils/loading_utils.dart';\n\nclass LoadingExamplesPage extends StatefulWidget {\n  const LoadingExamplesPage({super.key});\n\n  @override\n  State<LoadingExamplesPage> createState() => _LoadingExamplesPageState();\n}\n\nclass _LoadingExamplesPageState extends State<LoadingExamplesPage> {\n  bool _isLoading = false;\n  bool _showOverlay = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.black,\n      appBar: AppBar(\n        title: const Text('Dice Loading Examples'),\n        backgroundColor: Colors.black,\n      ),\n      body: LoadingUtils.buildLoadingOverlay(\n        isLoading: _showOverlay,\n        message: 'Processing your request...',\n        child: SingleChildScrollView(\n          padding: const EdgeInsets.all(16),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const Text(\n                'Button Loading States',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 1: Button with dice loading\n              ElevatedButton(\n                onPressed: _isLoading ? null : () => _simulateButtonLoading(),\n                child: _isLoading \n                    ? const DiceLoadingSmall(size: 20)\n                    : const Text('Sign In'),\n              ),\n              \n              const SizedBox(height: 32),\n              const Text(\n                'Dialog Loading',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 2: Loading dialog\n              ElevatedButton(\n                onPressed: () => _showLoadingDialog(),\n                child: const Text('Show Loading Dialog'),\n              ),\n              \n              const SizedBox(height: 32),\n              const Text(\n                'Overlay Loading',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 3: Overlay loading\n              ElevatedButton(\n                onPressed: () => _showLoadingOverlay(),\n                child: const Text('Show Overlay Loading'),\n              ),\n              \n              const SizedBox(height: 32),\n              const Text(\n                'SnackBar Loading',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 4: SnackBar loading\n              ElevatedButton(\n                onPressed: () => context.showDiceLoadingSnackBar(message: 'Loading data...'),\n                child: const Text('Show Loading SnackBar'),\n              ),\n              \n              const SizedBox(height: 32),\n              const Text(\n                'Inline Loading Widget',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 5: Inline loading widget\n              Container(\n                padding: const EdgeInsets.all(16),\n                decoration: BoxDecoration(\n                  color: Colors.grey[900],\n                  borderRadius: BorderRadius.circular(12),\n                ),\n                child: const DiceLoadingWidget(\n                  message: 'Loading your favorite teams...',\n                  size: 60,\n                ),\n              ),\n              \n              const SizedBox(height: 32),\n              const Text(\n                'Small Inline Loader',\n                style: TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              const SizedBox(height: 16),\n              \n              // Example 6: Small inline loader\n              Row(\n                children: [\n                  const Text('Processing', style: TextStyle(color: Colors.white)),\n                  const SizedBox(width: 8),\n                  const DiceLoadingSmall(size: 16),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  Future<void> _simulateButtonLoading() async {\n    setState(() => _isLoading = true);\n    await Future.delayed(const Duration(seconds: 3));\n    setState(() => _isLoading = false);\n  }\n\n  Future<void> _showLoadingDialog() async {\n    context.showDiceLoading(message: 'Authenticating user...');\n    await Future.delayed(const Duration(seconds: 3));\n    context.hideDiceLoading();\n  }\n\n  Future<void> _showLoadingOverlay() async {\n    setState(() => _showOverlay = true);\n    await Future.delayed(const Duration(seconds: 3));\n    setState(() => _showOverlay = false);\n  }\n}\n\n// HOW TO USE IN YOUR EXISTING PAGES:\n//\n// 1. Import the widgets:\n// import '../widgets/dice_loading_widget.dart';\n// import '../utils/loading_utils.dart';\n//\n// 2. For button loading:\n// child: _isLoading ? const DiceLoadingSmall(size: 20) : const Text('Button Text')\n//\n// 3. For dialog loading:\n// context.showDiceLoading(message: 'Loading...');\n// // do async work\n// context.hideDiceLoading();\n//\n// 4. For full screen loading:\n// if (_isLoading) {\n//   return LoadingUtils.getFullScreenLoader(message: 'Loading data...');\n// }\n//\n// 5. For overlay loading:\n// return LoadingUtils.buildLoadingOverlay(\n//   isLoading: _isLoading,\n//   message: 'Processing...',\n//   child: YourMainWidget(),\n// );\n